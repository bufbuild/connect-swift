// Code generated by Wire protocol buffer compiler, do not edit.
// Source: buf.connect.demo.eliza.v1.ConverseRequest in eliza.proto
import Foundation
import Wire

/**
 *  ConverseRequest describes the sentence said to the ELIZA program.
 */
public struct ConverseRequest {

    public var sentence: String
    public var unknownFields: Data = .init()

    public init(sentence: String) {
        self.sentence = sentence
    }

}

#if !WIRE_REMOVE_EQUATABLE
extension ConverseRequest : Equatable {
}
#endif

#if !WIRE_REMOVE_HASHABLE
extension ConverseRequest : Hashable {
}
#endif

extension ConverseRequest : ProtoMessage {
    public static func protoMessageTypeURL() -> String {
        return "type.googleapis.com/buf.connect.demo.eliza.v1.ConverseRequest"
    }
}

extension ConverseRequest : Proto3Codable {
    public init(from reader: ProtoReader) throws {
        var sentence: String? = nil

        let token = try reader.beginMessage()
        while let tag = try reader.nextTag(token: token) {
            switch tag {
            case 1: sentence = try reader.decode(String.self)
            default: try reader.readUnknownField(tag: tag)
            }
        }
        self.unknownFields = try reader.endMessage(token: token)

        self.sentence = try ConverseRequest.checkIfMissing(sentence, "sentence")
    }

    public func encode(to writer: ProtoWriter) throws {
        try writer.encode(tag: 1, value: self.sentence)
        try writer.writeUnknownFields(unknownFields)
    }
}

#if !WIRE_REMOVE_CODABLE
extension ConverseRequest : Codable {
    public enum CodingKeys : String, CodingKey {

        case sentence

    }
}
#endif
