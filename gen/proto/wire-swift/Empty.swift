// Code generated by Wire protocol buffer compiler, do not edit.
// Source: grpc.testing.Empty in grpc/testing/empty.proto
import Foundation
import Wire

/**
 *  An empty message that you can re-use to avoid defining duplicated empty
 *  messages in your project. A typical example is to use it as argument or the
 *  return value of a service API. For instance:
 *
 *    service Foo {
 *      rpc Bar (grpc.testing.Empty) returns (grpc.testing.Empty) { };
 *    };
 */
public struct Empty {

    public var unknownFields: Data = .init()

    public init() {
    }

}

#if !WIRE_REMOVE_EQUATABLE
extension Empty : Equatable {
}
#endif

#if !WIRE_REMOVE_HASHABLE
extension Empty : Hashable {
}
#endif

extension Empty : ProtoMessage {
    public static func protoMessageTypeURL() -> String {
        return "type.googleapis.com/grpc.testing.Empty"
    }
}

extension Empty : Proto3Codable {
    public init(from reader: ProtoReader) throws {
        let token = try reader.beginMessage()
        while let tag = try reader.nextTag(token: token) {
            switch tag {
            default: try reader.readUnknownField(tag: tag)
            }
        }
        self.unknownFields = try reader.endMessage(token: token)

    }

    public func encode(to writer: ProtoWriter) throws {
        try writer.writeUnknownFields(unknownFields)
    }
}

#if !WIRE_REMOVE_CODABLE
extension Empty : Codable {
}
#endif
